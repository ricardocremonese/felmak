AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for discount-service

Mappings:
  Config:
    Service:
      StackName: microservice-maintenence-uptime-dev
      Name: microservice-maintenence-uptime-dev
    Database:
      CheckupSchedule: checkupScheduleDev
      Schedule: scheduleDev
      Dealership: dealershipDev
      FieldCampaign: fieldCampaignDev
      Consultant: consultantDev
      MaintenanceTicket: maintenanceTicketDev
      DealershipTransRio: dealershipTransRioDev
      UptimeAsset: uptimeAssetDev
      MaintenanceParts: maintenancePartsDev
      MaintenanceRange: maintenanceRangeDev
      EngineModel: engineModelDev
      ModelCode: modelCodeDev
      Assistance: assistanceDev
      ConfigTable: configTableDev
      Asset: assetDev
      Sequences: sequencesDev
      DealershipFavorite: dealershipFavoriteDev
      UserProfile: userProfileDev
Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !ImportValue kafka-integration-policy-arn
        - !ImportValue bitbucket-integration-s3-bucket-policy-arn
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly
      Policies:
        - PolicyName: "Additional_Permissions"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                  - ssm:GetParameter
                Resource: "*"
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                Resource: !Sub
                  - arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${StackName}-JunitTestResults
                  - StackName: !FindInMap [ Config, Service, StackName ]
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Cache:
        Location: !Sub
          - ${BucketName}/cache/${ServiceName}
          - BucketName: !ImportValue bitbucket-integration-s3-bucket
            ServiceName: !FindInMap [Config, Service, Name]
        Type: S3
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/buildspec.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        PrivilegedMode: true
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: SONAR_HOST_URL
            Type: PARAMETER_STORE
            Value: /config/sonarqube/host-url
          - Name: SONAR_TOKEN
            Type: PARAMETER_STORE
            Value: /config/sonarqube/token
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: REPOSITORY_NAME
            Value: !Ref Repository
          - Name: SERVICE_NAME
            Value: !FindInMap [ Config, Service, StackName ]
      Name: !FindInMap [ Config, Service, StackName ]
      ServiceRole: !GetAtt CodeBuildRole.Arn
  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/codebuild/${CodeBuildProject}
      RetentionInDays: 7
  Repository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !FindInMap [ Config, Service, StackName ]
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "keep only the latest 20 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 20
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
  DynamoDbDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Additional_Permissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamoDb:DescribeTable
                  - dynamoDb:CreateTable
                  - dynamoDb:UpdateTable
                  - dynamodb:DescribeContinuousBackups
                  - dynamodb:UpdateContinuousBackups
                  - dynamoDb:PutItem
                Resource: "*"
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !ImportValue bitbucket-integration-s3-bucket
      Name: !FindInMap [ Config, Service, StackName ]
      RoleArn: !ImportValue bitbucket-pipeline-role-arn
      Tags:
        - Key: pipeline_type
          Value: deploy
      Stages:
        - Name: S3Trigger
          Actions:
            - Name: GetTriggerFile
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              Configuration:
                S3Bucket: !ImportValue bitbucket-integration-s3-bucket
                S3ObjectKey: !Sub
                  - ${ServiceName}/trigger/master_repo.zip
                  - ServiceName: !FindInMap [ Config, Service, Name ]
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: complete-sources
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CreateServiceImage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: complete-sources
              OutputArtifacts:
                - Name: template-with-config
              RunOrder: 1
        - Name: CreateDependencies
          Actions:
            - Name: CreateDynamoDBCheckupSchedule
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, CheckupSchedule ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-checkupSchedule-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBSchedule
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, Schedule ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-schedule-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBDealership
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, Dealership ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-dealership-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBFieldCampaign
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, FieldCampaign ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-fieldCampaign-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBConsultant
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, Consultant ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-consultant-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBMaintenanceTicket
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, MaintenanceTicket ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-maintenanceTicket-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBDealershipTransRio
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, DealershipTransRio ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-dealershipTransRio-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBUptimeAsset
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, UptimeAsset ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-uptimeAsset-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBMaintenanceParts
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, MaintenanceParts ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-maintenanceParts-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBMaintenanceRange
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, MaintenanceRange ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-maintenanceRange-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBEngineModel
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, EngineModel ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-engineModel-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBModelCode
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, ModelCode ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-modelCode-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBAssistance
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, Assistance ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-assistance-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBConfigTable
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, ConfigTable ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-configTable-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBSequences
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, Sequences ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-sequences-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBAsset
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, Asset ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-asset-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDBDealershipFavorite
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, DealershipFavorite ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-dealershipFavorite-template.yaml
              RunOrder: 1
            - Name: CreateDynamoDbUserProfile
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: complete-sources
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt DynamoDbDeployRole.Arn
                StackName: !FindInMap [ Config, Database, UserProfile ]
                TemplatePath: complete-sources::infrastructure/cf-dynamoDB-userProfile-template.yaml
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployViaCloudFormation
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: complete-sources
                - Name: template-with-config
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                ParameterOverrides: !Sub |
                  {
                    "Repository": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}" ,
                    "Tag": {"Fn::GetParam": ["template-with-config", "commit.json", "tag"]}
                  }
                RoleArn: !ImportValue bitbucket-deployment-role-arn
                StackName: !FindInMap [ Config, Service, StackName ]
                TemplatePath: template-with-config::cf-template.yaml
                TemplateConfiguration: template-with-config::cf-template.config
              RunOrder: 1