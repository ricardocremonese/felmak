version: 0.2
env:
  parameter-store:
    CREATE_AND_SIGN_CERTIFICATE_SCRIPT_S3_LOCATION: /config/kafka-integration/create-and-sign-certificate-script-s3-location
  variables:
    GRADLE_WRAPPER_PATH: /root/.gradle/wrapper
    GRADLE_WRAPPER_THRESHOLD: 1200
    GRADLE_CACHE_PATH: /root/.gradle/caches
    GRADLE_CACHE_THRESHOLD: 1000
phases:
  install:
    runtime-versions:
      golang: 1.18
      java: corretto17
    commands:
      - yum install --assumeyes amazon-ecr-credential-helper openssl
      - export SONAR_SCANNER_VERSION=7.2.0.5079
      - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux-x64
      - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux-x64.zip
      - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      - export PATH=$SONAR_SCANNER_HOME/bin:$PATH

  pre_build:
    commands:
      - sonar-scanner -Dsonar.projectKey=UPT_microservice-maintenence-uptime-dev_e2cd455b-06e3-4b7e-a234-d1ac7fe89b99 -Dsonar.projectName="uptime/dev/microservice-maintenance" -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL || echo "SonarQube analysis failed, but continuing pipeline"
      - echo "Login to ecr-proxy docker registry"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPOSITORY_NAME}"

  build:
    commands:
      - echo Building and pushing the docker image ...
      - export TAG=$(git rev-parse --short HEAD)
      - echo "{\"tag\":\"$TAG\"}" > commit.json
      - export DOCKER_IMAGE="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPOSITORY_NAME}:${TAG}"
      - docker build -t $DOCKER_IMAGE .
      - docker push $DOCKER_IMAGE
      - echo Pushing the docker image to \'${DOCKER_IMAGE}\'

  post_build:
    commands:
      - echo Build completed on $(date)

reports:
  JunitTestResults:
    files:
      - "**/*"
    base-directory: build/test-results
cache:
  paths:
    - /cert/**/*
    - /root/.gradle/caches/**/*
    - /root/.gradle/wrapper/**/*
artifacts:
  discard-paths: yes
  files:
    - commit.json
    - infrastructure/cf-template.yaml
    - infrastructure/cf-template.config